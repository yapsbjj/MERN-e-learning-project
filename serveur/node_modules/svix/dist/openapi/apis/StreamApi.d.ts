import { BaseAPIRequestFactory } from './baseapi';
import { Configuration } from '../configuration';
import { RequestContext, ResponseContext, HttpInfo } from '../http/http';
import { CreateStreamIn } from '../models/CreateStreamIn';
import { EventStreamOut } from '../models/EventStreamOut';
import { ListResponseStreamOut } from '../models/ListResponseStreamOut';
import { Ordering } from '../models/Ordering';
import { StreamIn } from '../models/StreamIn';
import { StreamOut } from '../models/StreamOut';
import { StreamPatch } from '../models/StreamPatch';
export declare class StreamApiRequestFactory extends BaseAPIRequestFactory {
    v1StreamCreate(streamIn: StreamIn, idempotencyKey?: string, _options?: Configuration): Promise<RequestContext>;
    v1StreamCreateEvents(streamId: string, createStreamIn: CreateStreamIn, idempotencyKey?: string, _options?: Configuration): Promise<RequestContext>;
    v1StreamDelete(streamId: string, _options?: Configuration): Promise<RequestContext>;
    v1StreamEventsGet(streamId: string, limit?: number, iterator?: string, after?: Date, _options?: Configuration): Promise<RequestContext>;
    v1StreamGet(streamId: string, _options?: Configuration): Promise<RequestContext>;
    v1StreamList(limit?: number, iterator?: string, order?: Ordering, _options?: Configuration): Promise<RequestContext>;
    v1StreamPatch(streamId: string, streamPatch: StreamPatch, _options?: Configuration): Promise<RequestContext>;
    v1StreamUpdate(streamId: string, streamIn: StreamIn, _options?: Configuration): Promise<RequestContext>;
}
export declare class StreamApiResponseProcessor {
    v1StreamCreateWithHttpInfo(response: ResponseContext): Promise<HttpInfo<StreamOut>>;
    v1StreamCreateEventsWithHttpInfo(response: ResponseContext): Promise<HttpInfo<any>>;
    v1StreamDeleteWithHttpInfo(response: ResponseContext): Promise<HttpInfo<void>>;
    v1StreamEventsGetWithHttpInfo(response: ResponseContext): Promise<HttpInfo<EventStreamOut>>;
    v1StreamGetWithHttpInfo(response: ResponseContext): Promise<HttpInfo<StreamOut>>;
    v1StreamListWithHttpInfo(response: ResponseContext): Promise<HttpInfo<ListResponseStreamOut>>;
    v1StreamPatchWithHttpInfo(response: ResponseContext): Promise<HttpInfo<StreamOut>>;
    v1StreamUpdateWithHttpInfo(response: ResponseContext): Promise<HttpInfo<StreamOut>>;
}
