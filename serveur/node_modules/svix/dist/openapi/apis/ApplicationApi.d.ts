import { BaseAPIRequestFactory } from './baseapi';
import { Configuration } from '../configuration';
import { RequestContext, ResponseContext, HttpInfo } from '../http/http';
import { ApplicationIn } from '../models/ApplicationIn';
import { ApplicationOut } from '../models/ApplicationOut';
import { ApplicationPatch } from '../models/ApplicationPatch';
import { ApplicationStats } from '../models/ApplicationStats';
import { ListResponseApplicationOut } from '../models/ListResponseApplicationOut';
import { ListResponseApplicationStats } from '../models/ListResponseApplicationStats';
import { Ordering } from '../models/Ordering';
export declare class ApplicationApiRequestFactory extends BaseAPIRequestFactory {
    getAppUsageStatsApiV1AppStatsUsageGet(since: Date, until: Date, limit?: number, iterator?: string, _options?: Configuration): Promise<RequestContext>;
    v1ApplicationCreate(applicationIn: ApplicationIn, getIfExists?: boolean, idempotencyKey?: string, _options?: Configuration): Promise<RequestContext>;
    v1ApplicationDelete(appId: string, _options?: Configuration): Promise<RequestContext>;
    v1ApplicationGet(appId: string, _options?: Configuration): Promise<RequestContext>;
    v1ApplicationGetStats(since: Date, until: Date, appId: string, _options?: Configuration): Promise<RequestContext>;
    v1ApplicationList(limit?: number, iterator?: string, order?: Ordering, _options?: Configuration): Promise<RequestContext>;
    v1ApplicationPatch(appId: string, applicationPatch: ApplicationPatch, _options?: Configuration): Promise<RequestContext>;
    v1ApplicationUpdate(appId: string, applicationIn: ApplicationIn, _options?: Configuration): Promise<RequestContext>;
}
export declare class ApplicationApiResponseProcessor {
    getAppUsageStatsApiV1AppStatsUsageGetWithHttpInfo(response: ResponseContext): Promise<HttpInfo<ListResponseApplicationStats>>;
    v1ApplicationCreateWithHttpInfo(response: ResponseContext): Promise<HttpInfo<ApplicationOut>>;
    v1ApplicationDeleteWithHttpInfo(response: ResponseContext): Promise<HttpInfo<void>>;
    v1ApplicationGetWithHttpInfo(response: ResponseContext): Promise<HttpInfo<ApplicationOut>>;
    v1ApplicationGetStatsWithHttpInfo(response: ResponseContext): Promise<HttpInfo<ApplicationStats>>;
    v1ApplicationListWithHttpInfo(response: ResponseContext): Promise<HttpInfo<ListResponseApplicationOut>>;
    v1ApplicationPatchWithHttpInfo(response: ResponseContext): Promise<HttpInfo<ApplicationOut>>;
    v1ApplicationUpdateWithHttpInfo(response: ResponseContext): Promise<HttpInfo<ApplicationOut>>;
}
